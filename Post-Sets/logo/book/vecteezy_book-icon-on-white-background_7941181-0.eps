%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: -1 -1 2500 2500 
%%LanguageLevel: 2
%%Creator: CorelDRAW 2020
%%Title: book.eps
%%CreationDate: Mon May 23 20:03:43 2022
%%DocumentProcessColors: Cyan Magenta Yellow Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/DocPsLevel 2 def
%Build: CorelDRAW 2020 Version 22.0.0.412
/EpsFile true def
%%BeginResource: procset wCorel22Dict 22.0 0
/wCorel22Dict 300 dict def wCorel22Dict begin
%----------------------------------------------------------------------------
% Core Corel PostScript prolog functions
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/rp{{pop}repeat}bd/dexec{
exch begin cvx exec end}bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np
/newpath ld/Tl/translate ld/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd
/spg/showpage ld/showpage{}bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf
xd/$sdf false def/$SDF false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0
eq{$dsf 3 1 roll 4 -1 roll pop}if exch $Scra add exch load SetScr}bd
/SeparationMode where{pop}{/SeparationMode/Composite def}ifelse
/SeparationPlateName where{pop}{/SeparationPlateName null def}ifelse
/SeparateInColor where{pop}{/SeparateInColor false def}ifelse/EpsFile where
{pop}{/EpsFile false def}ifelse/FillOverprint false def/$fil 0 def
/OutlineOverprint 0 def/$PF false def/$bkg false def/CurrentOverprint false def
matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm matrix def
/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve 16#6/dotaccent
16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar 16#80/Euro
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/get_ps_level/languagelevel where{pop systemdict/languagelevel get exec}{1}
ifelse def/Level2 get_ps_level 2 ge def/Level3 get_ps_level 3 ge def
/AdobeDistiller/product where{pop systemdict/setdistillerparams known product
(Adobe PostScript Parser)ne and}{false}ifelse def/InRipSeparation
AdobeDistiller{false}{Level2{currentpagedevice/Separations 2 copy known{get}{
pop pop false}ifelse}{false}ifelse}ifelse def/ColorSeparationLevel1 1 0 0 0
gsave setcmykcolor currentcmykcolor grestore add add add 0 ne 0 1 0 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 1 0 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne 0 0 0 1 gsave
setcmykcolor currentcmykcolor grestore add add add 0 ne and and and not def
/ColorSeparation/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{
InRipSeparation{true}{ColorSeparationLevel1}ifelse}ifelse}ifelse def
/IsColorDevice/deviceinfo where{pop deviceinfo/Colors known{deviceinfo/Colors
get exec 1 gt}{false}ifelse}{/statusdict where{pop statusdict/processcolors
known{statusdict/processcolors get exec 1 gt}{false}ifelse}{false}ifelse}
ifelse def/get_simulate_devicen get_ps_level 2 eq{{SeparationMode/OnHost ne
InRipSeparation AdobeDistiller or and}bind}{false}ifelse def/DocGrayScaleSpace
[/DeviceGray]def/DocRgbSpace[/DeviceRGB]def/DocCmykSpace[/DeviceCMYK]def
/DocLabSpace[/CIEBasedABC <</BlackPoint[0 0 0]/WhitePoint[0.9637 1.0000 0.8241
]/RangeABC[0 100 -128 127 -128 127]/DecodeABC[{16 add 116 div}bind{500 div}
bind{200 div}bind]/MatrixABC[1 1 1 1 0 0 0 0 -1]/DecodeLMN[{dup 0.206897 ge{dup
dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.9637 mul}bind{dup 0.206897
ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 1.0000 mul}bind{dup
0.206897 ge{dup dup mul mul}{0.137931 sub 0.128419 mul}ifelse 0.8241 mul}bind]
>>]def/validate_cie_colorspace_whitepoint{load dup aload pop/WhitePoint get 1
1.0 put pop}bd/set_cie_colorspaces{/DocGrayScaleSpaceCIE where{pop
/DocGrayScaleSpaceCIE validate_cie_colorspace_whitepoint/DocGrayScaleSpace xd
DocGrayScaleSpace aload pop begin pop/DecodeA where{pop DecodeA type/arraytype
eq{DecodeA aload pop/DecodeA exch def}if}if end}if/DocRgbSpaceCIE where{pop
/DocRgbSpaceCIE validate_cie_colorspace_whitepoint/DocRgbSpace xd}if
/DocCmykSpaceCIE where{pop/DocCmykSpaceCIE validate_cie_colorspace_whitepoint
/DocCmykSpace xd}if}bd/set_rendering_intent{Level3{findcolorrendering{
/ColorRendering findresource setcolorrendering}{dup/DefaultColorRendering eq{
pop}{/ColorRendering findresource setcolorrendering}}ifelse}{pop}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}def}ifelse
/setcustomcolor where SeparationMode/OnHost ne and{pop}{/tint_cmyk_color{5 -1
roll dup 1 ge{pop}{4{dup 6 -1 roll mul exch}repeat pop}ifelse}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{SepsColor not{4 1 roll pop pop pop
1 exch sub SetGry}{SetCmyk_5}ifelse}ifelse}bd/setcustomcolor{exch aload pop
SepMode_5 0 eq{pop tint_cmyk_color setprocesscolor_5}{CurrentInkName_5 eq{4
index}{0}ifelse 6 1 roll 5 rp 1 sub neg SetGry}ifelse}bd}ifelse
/convert_rgb_to_cmyk{dup type/dicttype eq{}{3{1 exch sub 3 1 roll}repeat 3 copy
min min 3{dup 5 -1 roll sub neg exch}repeat}ifelse}bd/safe_setcolorspace{dup
currentcolorspace eq{pop}{setcolorspace}ifelse}bd/safe_setoverprint{dup type
/booleantype eq{dup currentoverprint ne{setoverprint}{pop}ifelse}{1 eq
setoverprint}ifelse}bd/is_cmyk_channel_name{/channel_name xd channel_name/Cyan
eq channel_name/Magenta eq or channel_name/Yellow eq or channel_name/Black eq
or{true}{false}ifelse}bd/is_rgb_channel_name{/channel_name xd channel_name/Red
eq channel_name/Green eq or channel_name/Blue eq or{true}{false}ifelse}bd
/is_spot_channel_name{/channel_name xd channel_name is_cmyk_channel_name
channel_name is_rgb_channel_name or channel_name/Gray eq or{false}{true}ifelse
}bd/spot_tint_transform_proc{/alternativeSpace xd/alternativeColors xd/tint xd
alternativeSpace DocLabSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3
def}{alternativeSpace DocCmykSpace eq{/mixMethod/Subtractive def
/altSpaceNumChannels 4 def}{alternativeSpace DocRgbSpace eq{/mixMethod
/Additive def/altSpaceNumChannels 3 def}{alternativeSpace DocGrayScaleSpace eq
{/mixMethod/Additive def/altSpaceNumChannels 1 def}if}ifelse}ifelse}ifelse
alternativeSpace DocLabSpace eq{alternativeColors aload pop tint mul 3 1 roll
tint mul 3 1 roll dup 100 exch sub 1 tint sub mul add 3 1 roll}{/tintedColor
altSpaceNumChannels{0.0}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def alternativeColors
altChannelIndex get mixMethod/Additive eq{1.0 exch sub tint mul 1.0 exch sub}{
tint mul}ifelse tintedColor altChannelIndex 3 2 roll put}for tintedColor aload
pop}ifelse}bd/devicen_colorant_mixer_proc{/numChannels xd/alternativeSpace xd
/channelNames xd/alternativeColors xd numColorants array astore/colorants xd
/is_spot_channel_name_loc{is_spot_channel_name}bind def alternativeSpace
DocCmykSpace eq{/mixMethod/Subtractive def/altSpaceNumChannels 4 def
/is_spot_channel_name_loc{is_cmyk_channel_name not}bind def}{alternativeSpace
DocRgbSpace eq{/mixMethod/Additive def/altSpaceNumChannels 3 def
/is_spot_channel_name_loc{is_rgb_channel_name not}bind def}{alternativeSpace
DocGrayScaleSpace eq{/mixMethod/Additive def/altSpaceNumChannels 1 def
/is_spot_channel_name_loc{/Gray ne}bind def}if}ifelse}ifelse mixMethod
/Additive eq{/mixedColor altSpaceNumChannels{0.0}repeat altSpaceNumChannels
array astore def/bProcessPlateTinted false def 0 1 numChannels 1 sub{
/channelIndex exch def channelNames channelIndex get is_spot_channel_name_loc
/bSpotChannel xd/sourceChannel colorants channelIndex get def/bWhiteBackground
0 mixedColor{add}forall altSpaceNumChannels div 0.999 gt bProcessPlateTinted
and def bSpotChannel bProcessPlateTinted not and{/bSpotChannel false def}if 0 1
altSpaceNumChannels 1 sub{/altChannelIndex exch def/mixedChannel mixedColor
altChannelIndex get def sourceChannel alternativeColors channelIndex get
altChannelIndex get 1.0 exch sub mul 1.0 exch sub dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if bSpotChannel{sourceChannel 0.0 gt{mixedChannel mul}{pop
mixedChannel}ifelse}{/bProcessPlateTinted true def globaldict begin
/bSkipDeviceNImage where{pop false}{true}ifelse end DevicenImage and{pop
sourceChannel alternativeColors channelIndex get altChannelIndex get mul
mixedChannel add}{mixedChannel add}ifelse}ifelse dup 1.0 gt{pop 1.0}if dup 0.0
lt{pop 0.0}if mixedColor altChannelIndex 3 2 roll put}for}for}{/mixedColor
altSpaceNumChannels{1}repeat altSpaceNumChannels array astore def 0 1
altSpaceNumChannels 1 sub{/targetIndex exch def 0 1 numColorants 1 sub{
/sourceIndex exch def colorants sourceIndex get alternativeColors sourceIndex
get targetIndex get mul 1 exch sub mixedColor targetIndex get mul mixedColor
targetIndex 3 2 roll put}for mixedColor targetIndex 1 mixedColor targetIndex
get sub put}for}ifelse mixedColor aload pop}bd/ColorSpec 9 dict begin/color[]
def/names[]def/num 0 def/ColorModel null def/ColorSpace[]def/set_color{
ColorSeparationLevel1{convert_to_cmyk/color get aload pop setcmykcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_set_color{SeparationMode/OnHost eq{separate_color{/set_color dexec
true}{pop currentoverprint{false}{SeparateInColor{0 0 0 0 SetCmyk_5 true}{1
SetGry true}ifelse}ifelse}ifelse}{set_color true}ifelse}bd/separate_color{
currentdict false}bd/convert_to_cmyk{currentdict}bd currentdict end def
/GrayscaleColorSpec ColorSpec 9 dict copy begin/names{/Black}def/num 1 def
/ColorModel/Grayscale def/ColorSpace DocGrayScaleSpace def/separate_color{
currentdict false SeparationMode/OnHost eq{SeparationPlateName/Black eq{
SeparateInColor{pop convert_to_cmyk true}{pop true}ifelse}if}if}bd
/convert_to_cmyk{0 0 0 color aload pop 1 exch sub create_cmyk_color}bd
currentdict end def/create_grayscale_color{GrayscaleColorSpec 9 dict copy begin
/color exch 1 array astore def/ColorSpace DocGrayScaleSpace def currentdict end
}bd/RgbColorSpec ColorSpec 9 dict copy begin/names{/Red/Green/Blue}def/num 3
def/ColorModel/Rgb def/ColorSpace DocRgbSpace def/separate_color{
convert_to_cmyk/separate_color dexec}bd/convert_to_cmyk{color aload pop
convert_rgb_to_cmyk create_cmyk_color}bd currentdict end def/create_rgb_color{
RgbColorSpec 9 dict copy begin 3 array astore/color exch def/ColorSpace
DocRgbSpace def currentdict end}bd/HsbColorSpec ColorSpec 9 dict copy begin
/names{/Hue/Saturation/Brightness}def/num 3 def/ColorModel/Hsb def/ColorSpace
DocRgbSpace def/separate_color{convert_to_cmyk/separate_color dexec}bd
/convert_to_cmyk{color aload pop hsb2rgb convert_rgb_to_cmyk create_cmyk_color
}bd/convert_to_rgb{color aload pop hsb2rgb create_rgb_color}bd currentdict end
def/create_hsb_color{HsbColorSpec 9 dict copy begin 3 array astore/color exch
def/ColorSpace DocRgbSpace def currentdict end}bd/CmykColorSpec ColorSpec 9
dict copy begin/names{/Cyan/Magenta/Yellow/Black}def/num 4 def/ColorModel/Cmyk
def/ColorSpace DocCmykSpace def/separate_color{currentdict false
SeparationPlateIndex 0 ge SeparationPlateIndex 3 le and{color
SeparationPlateIndex get dup 0 gt{3 1 roll pop pop SeparateInColor{0 0 0 4
SeparationPlateIndex roll create_cmyk_color true}{1 exch sub
create_grayscale_color true}ifelse}{pop}ifelse}if}bd/convert_to_cmyk{
currentdict}bd currentdict end def/create_cmyk_color{CmykColorSpec 9 dict copy
begin 4 array astore/color exch def/ColorSpace DocCmykSpace def currentdict end
}bd/SpotColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel/Spot def
/set_color{ColorSeparationLevel1{color aload pop get_cmyk_alternative_color
/color get aload pop names aload pop findcmykcustomcolor exch setcustomcolor}{
ColorSpace safe_setcolorspace color aload pop setcolor}ifelse}bd
/separate_color{currentdict false SeparationPlateIndex 4 eq{names aload pop
SeparationPlateName eq{color aload pop dup 0 gt{3 1 roll pop pop
SeparateInColor{pop convert_to_cmyk true}{1 exch sub create_grayscale_color
true}ifelse}{pop}ifelse}if}if}bd/convert_to_cmyk{/alternativeSpace ColorSpace 2
get def/tintTransformProc ColorSpace 3 get def alternativeSpace DocCmykSpace eq
{color aload pop tintTransformProc create_cmyk_color}{alternativeSpace
DocRgbSpace eq{color aload pop tintTransformProc create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{0 0 0 color aload
pop 1 sub create_cmyk_color}{0 0 0 1 create_cmyk_color}ifelse}ifelse}ifelse}bd
/get_cmyk_alternative_color{/alternativeSpace ColorSpace 2 get def
alternativeSpace DocCmykSpace eq{alternativeColor aload pop create_cmyk_color}
{alternativeSpace DocRgbSpace eq{alternativeColor aload pop create_rgb_color
/convert_to_cmyk dexec}{alternativeSpace DocGrayScaleSpace eq{alternativeColor
aload pop create_grayscale_color/convert_to_cmyk dexec}{0 0 0 1
create_cmyk_color}ifelse}ifelse}ifelse}bd currentdict end def
/create_spot_colorspace{load/alternativeSpace xd/alternativeColor xd/name xd[
/Separation name alternativeSpace[alternativeColor alternativeSpace
/spot_tint_transform_proc cvx]cvx]}bd/create_spot_color{SpotColorSpec 9 dict
copy begin dup type/arraytype ne{create_spot_colorspace}if/ColorSpace xd/color
exch 1 array astore def ColorSpace 1 get 1 array astore/names xd currentdict
end}bd/DevicenColorSpec SpotColorSpec 9 dict copy begin/ColorModel/DeviceN def
/set_color{Level3{ColorSpace safe_setcolorspace color aload pop setcolor}{
ColorSpace 2 get setcolorspace color aload pop ColorSpace 3 get exec setcolor}
ifelse}bd/separate_color{currentdict false/PlateIndex -1 def 0 1 num 1 sub{dup
names exch get SeparationPlateName eq{/PlateIndex xd exit}if pop}for PlateIndex
0 ge{color PlateIndex get dup 0 gt{SeparateInColor{num 1 sub{0}repeat num
PlateIndex roll ColorSpace create_devicen_color/convert_to_cmyk dexec true}{1
exch sub create_grayscale_color true}ifelse 4 2 roll pop pop}{pop}ifelse}if}bd
/get_ink_as_spot{dup/indexInk xd dup color exch get exch names exch get[1.0 num
1 sub{0}repeat num indexInk roll ColorSpace 3 get exec]ColorSpace 2 get
create_spot_color}bd currentdict end def/create_devicen_colorspace{
/numColorants xd load/alternativeSpace xd bind/tintTransform exch def/names xd
[/DeviceN names alternativeSpace/tintTransform load]}bd/create_devicen_color{
DevicenColorSpec 9 dict copy begin dup type/arraytype ne{
create_devicen_colorspace}if/ColorSpace xd/num ColorSpace 1 get length def
/names ColorSpace 1 get def num array astore/color xd currentdict end}bd
/RegistrationColorSpec ColorSpec 9 dict copy begin/num 1 def/ColorModel
/Registration def/ColorSpace{[/Separation/All DocCmykSpace{dup dup dup}]}def
/names[/All]def/set_color{ColorSeparationLevel1{DocGrayScaleSpace
safe_setcolorspace color aload pop 1 exch sub setcolor}{ColorSpace
safe_setcolorspace color aload pop setcolor}ifelse}bd/separate_color{
SeparateInColor{convert_to_cmyk true}{color aload pop 1 exch sub
create_grayscale_color true}ifelse}bd/convert_to_cmyk{color aload pop dup dup
dup create_cmyk_color}bd currentdict end def/create_registration_color{
RegistrationColorSpec 9 dict copy begin 1 array astore/color xd currentdict end
}bd/LabColorSpec ColorSpec 9 dict copy begin/names{/L/a/b}def/num 3 def
/ColorModel/Lab def/ColorSpace DocLabSpace def/separate_color{convert_to_cmyk
/separate_color dexec}bd/convert_to_cmyk{0 0 0 0 create_cmyk_color}bd
currentdict end def/create_lab_color{LabColorSpec 9 dict copy begin 3 array
astore/color exch def/ColorSpace DocLabSpace def currentdict end}bd
/set_solid_fill{/FillColor xd/$fil 0 def}bd/set_outline{/OutlineColor xd}bd
/CheckLevelCompatibility{/DocPsLevel where{pop DocPsLevel get_ps_level gt{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level of Corel document is higher than the PostScript)show 72
132 m(level of this device. Change the PS Level in the Corel application)show
72 120 m(by selecting the PostScript tab in the print dialog, and selecting)
show 72 108 m(document level from the Compatibility drop down list.)show flush
spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known{systemdict
/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd/AutoFlatness where{pop
AutoFlatness{/@ifl{dup currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if}if/@ssa Level2{{true
setstrokeadjust}}{{}}ifelse bd/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M
/setmiterlimit ld/w/setlinewidth ld/O{/FillOverprint xd}bd/R{/OutlineOverprint
xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l/lineto ld/L/l ld/rl/rlineto ld/m
/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld
/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1 exch sub 0 0 0 4 roll 3
create_cmyk_color set_solid_fill/$fil 0 def}bd/G{1 sub neg 0 0 0 4 -1 roll
create_cmyk_color set_outline}bd/i{dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll
2 copy 6 -2 roll c}bd/V/v ld/y{2 copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd
matrix scale $ptm dup concatmatrix/$ptm xd 1 eq{$ptm exch dup concatmatrix
/$ptm xd}if/patternScallingMatrix where{pop patternScallingMatrix $ptm matrix
concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd{/$scp xd/$sca xd/$scf xd}if
}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}if}bd/@D{2 index 0 eq{$dsf 3 1
roll 4 -1 roll pop}if 3 copy exch $Scra add exch load SetScr/$dsp xd/$dsa xd
/$dsf xd}bd/$ngx{$SDF{$SCF SeparationMode/Composite eq{$SCA}{$dsa}ifelse $SCP
@ss}if}bd/min{2 copy le{pop}{exch pop}ifelse}bd/max{2 copy ge{pop}{exch pop}
ifelse}bd/in_range{3 -1 roll min max}bd/InRange/in_range load bd/@sqr{dup 0 rl
dup 0 exch rl neg 0 rl @cp}bd/currentscale{1 0 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt 0 1 dtransform matrix defaultmatrix
idtransform dup mul exch dup mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup
3 -1 roll eq{1 add}if}bd/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch
pop abs 1 exch sub}bd/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}
if exch}repeat pop}bd/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy min min 3{
dup 5 -1 roll sub neg exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul
add 1 index .114 mul add 4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{
/CorelImage systemdict/image get def/CorelSetGray systemdict/setgray get def
/CorelGetGray systemdict/currentgray get def/CorelSetTransfer systemdict
/settransfer get def/CorelGetTransfer systemdict/currenttransfer get def
/SetRgb/setrgbcolor ld/GetRgb/currentrgbcolor ld/SetGry/setgray ld/GetGry
/currentgray ld/SetRgb2 systemdict/setrgbcolor get def/GetRgb2 systemdict
/currentrgbcolor get def/SetHsb systemdict/sethsbcolor get def/GetHsb
systemdict/currenthsbcolor get def/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll
dup floor sub 3 1 roll SetHsb GetRgb2}bd/setcmykcolor where{pop/LumSepsDict
where{pop/SetCmyk_5{LumSepsDict/setcmykcolor get exec}def}{/AldusSepsDict where
{pop/SetCmyk_5{AldusSepsDict/setcmykcolor get exec}def}{/SetCmyk_5
/setcmykcolor ld}ifelse}ifelse}{/setcmykcolor{create_cmyk_color
/separate_set_color dexec/$ffpnt xd}bd/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse
/currentcmykcolor where{pop/GetCmyk/currentcmykcolor ld}{/GetCmyk{GetRgb
rgb2cmyk}bd}ifelse/setoverprint where{pop}{/setoverprint{/CurrentOverprint xd}
bd}ifelse/currentoverprint where{pop}{/currentoverprint{CurrentOverprint}bd}
ifelse/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{/ncolors xd
/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop pop exch
pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd/daqC xd pop
pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}ifelse}{/dataaq xd
{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub{dup 3 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat length 3 idiv
getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4 mul $dat 1
index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add get 255 div
$dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop $dat 3 1
roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}image}
ifelse}bd}ifelse/currentcmykcolor{GetCmyk}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SeparationMode/Composite eq{IMAGE}{dup
type/dicttype eq{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8
eq exch/BitsPerComponent get 1 eq or currentcolorspace 0 get DocGrayScaleSpace
eq and{SeparationPlateName(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get
abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{
SeparationPlateName(Black)eq{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}
repeat}ifelse}{IMAGE}ifelse}ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/$fm 0
def/wfill{1 $fm eq{fill}{eofill}ifelse}bd/@Pf{@sv SeparationMode/Composite eq{
true}{$Psc 0 ne or $ink_5 3 eq or}ifelse{0 J 0 j[]0 d FillOverprint
safe_setoverprint FillColor/separate_set_color dexec pop $ctm setmatrix 72 1000
div dup matrix scale dup concat dup Bburx exch Bbury exch itransform ceiling
cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform floor cvi
/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry wfill}
ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if
FillOverprint safe_setoverprint $fil 1 eq{CorelPtrnDoFill}{$fil 2 eq
{gradient_fill}{$fil 3 eq{@Pf}{get_simulate_devicen FillColor/ColorModel get
/DeviceN eq and{0 1 FillColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if
FillColor/get_ink_as_spot dexec/set_color dexec @gs wfill @gr}for}{FillColor
/separate_set_color dexec{wfill}{@np}ifelse}ifelse}ifelse}ifelse}ifelse $sdf{
$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp F}bd/S{matrix currentmatrix $ctm
setmatrix $SDF{$SCF $SCA $SCP @ss}if OutlineOverprint safe_setoverprint
get_simulate_devicen OutlineColor/ColorModel get/DeviceN eq and{0 1
OutlineColor/num get 1 sub{dup 0 gt{true safe_setoverprint}if OutlineColor
/get_ink_as_spot dexec/set_color dexec matrix currentmatrix $ptm concat @gs
stroke @gr setmatrix}for}{OutlineColor/separate_set_color dexec{matrix
currentmatrix $ptm concat stroke setmatrix}{@np}ifelse}ifelse $SDF{$dsf $dsa
$dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}bd/b{@cp B}bd/_E{5 array
astore exch cvlit xd}bd/@cc{currentfile $dat readhexstring pop}bd/@sm{/$ctm
$ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd/Bblly xd/Bbllx xd}bd/@c{@cp}bd
/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd}bd/tcc{@cc}def/@B{@gs S
@gr F}bd/@b{@cp @B}bd/init_separation{/SeparationMode where{pop}{
/SeparationMode/Composite def}ifelse/SeparationPlateName where{pop}{
/SeparationPlateName null def}ifelse/SeparateInColor where{pop}{
/SeparateInColor false def}ifelse SeparationMode/Composite eq{
/SeparationPlateIndex -1 def}{/SeparationPlateIndex 4 def}ifelse/CmykPlates[
/Cyan/Magenta/Yellow/Black]def 0 1 3{dup CmykPlates exch get
SeparationPlateName eq{/SeparationPlateIndex xd exit}if pop}for
/CurrentInkName_5 SeparationPlateName def/$ink_5 SeparationPlateIndex def
SeparationMode/OnHost eq{/SepMode_5 2 def}{/SepMode_5 0 def}ifelse/SepsColor
SeparateInColor def}bd/init_separation_from_legacy{EpsFile{/SepMode_5 where{
pop SepMode_5 2 eq{/SeparationMode/OnHost def}{/SeparationMode/Composite def}
ifelse}if/CurrentInkName_5 where{pop/SeparationPlateName CurrentInkName_5 def}
if/$ink_5 where{pop/SeparationPlateIndex $ink_5 def}if/SepsColor where{pop
/SeparateInColor SepsColor def}if}if}bd init_separation_from_legacy/@whi{@gs
-72000 dup m -72000 72000 l 72000 dup l 72000 -72000 l @cp 1 SetGry fill @gr}
bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec cvx]cvx settransfer @whi}
bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}bd/@eax{/deflevel deflevel
dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}ifelse}bd/eax{{exec}forall}
bd/@rax{deflevel 0 eq{@rs @sv}if}bd systemdict/pdfmark known not{/pdfmark
/cleartomark ld}if/wclip{1 $fm eq{clip}{eoclip}ifelse}bd
%----------------------------------------------------------------------------
% Raster images support
/set_image_clipping{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index
3 index l 3 index 3 index l clip pop pop pop pop}bd/set_image_parameters{/$frg
xd/$bkg xd/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd}bd
/output_image{/@cc xd @sm @gs set_image_clipping set_image_parameters
SeparationMode/OnHost eq EpsFile and{separate_output_image}{
output_composite_image}ifelse @gr $ctm setmatrix}bd/output_composite_image{
DocPsLevel 3 eq MaskedImage true eq and{output_masked_image}{$bts 1 gt
DocPsLevel 2 eq DocPsLevel 3 eq or and{DevicenImage{output_devicen_image}{
output_color_image}ifelse}{$bts 1 eq{output_monochrome_image}{
output_color_image_level1}ifelse}ifelse}ifelse}bd/separate_output_image{@gs
$bts 1 gt{separate_output_color_image}{separate_output_monochrome_image}ifelse
@gr not{currentoverprint not{1.0 SetGry wfill}if}if @np}bd/set_decode_filter{
ImageCompression/JPEG eq{/DCTDecode filter}{ImageCompression/RLE eq{
/RunLengthDecode filter}{ImageCompression/LZW eq{/LZWDecode filter}if}ifelse}
ifelse}bd/create_datasource{currentfile DevicenImage not get_ps_level 2 gt or{
/ASCII85Decode filter}if set_decode_filter}bd/set_image_strip_parameters{
/stripRows xd/numPlanes xd/stripBuffer $wid $bts mul $ncl mul stripRows mul 8
div ceiling cvi dup 65535 gt{pop $ncl $bts mul}if string def DevicenImage{
/readstrip{DataSource stripBuffer readhexstring pop}bd}{/readstrip{DataSource
stripBuffer readstring pop}bd}ifelse/stripHeight $lly $ury sub stripRows mul
$hei div def/stripOutBuffer $wid stripRows mul numPlanes mul 65535 min string
def/strip_img_dict 8 dict def strip_img_dict begin/ImageType 1 def/Width $wid
def/Height stripRows def/BitsPerComponent $bts def/Decode[numPlanes{0 1}
repeat]def/ImageMatrix[$wid 0 0 stripRows neg 0 $hei 0 gt{stripRows}{0}ifelse]
def/DataSource stripOutBuffer def end}bd/separate_output_color_image{
/plateContent false def $ncl 1 eq{SeparationPlateName/Black eq{
output_color_image/plateContent true def}if}{@np/DataSource create_datasource
def SeparateInColor{DocCmykSpace setcolorspace/numPlanes 4 def}{
DocGrayScaleSpace setcolorspace/numPlanes 1 def}ifelse/stripRows 65535 $wid
$bts mul $ncl numPlanes max mul 8 div div floor cvi 1 max def numPlanes
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{numPlanes $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 $wid stripRows mul 1 sub{/pixelIndex xd stripBuffer
pixelIndex $ncl mul $ncl getinterval{255 div}forall DevicenImage{
ImageDevicenSpace create_devicen_color}{$ncl 3 eq{create_rgb_color}{
create_cmyk_color}ifelse}ifelse/separate_color dexec{/plateContent true def
begin color aload pop end}{pop numPlanes[numPlanes 1 eq{1}{0}ifelse]cvx repeat
}ifelse numPlanes array astore/pixelSepIndex pixelIndex numPlanes mul def
/posColorant 0 def{stripOutBuffer pixelSepIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}ifelse plateContent}bd/separate_output_monochrome_image{
SeparationPlateName/Black eq{output_monochrome_image true}{false}ifelse}bd
/output_monochrome_image{$frg 1 eq{OutlineOverprint safe_setoverprint
ImageForegroundColor/separate_set_color dexec{1}{0}ifelse/$frg xd}{/$frg false
def}ifelse $bkg 1 eq{@gs $ctm setmatrix F @gr}if @np/$dat $wid $bts mul 8 div
ceiling cvi 65535 min string def $bkg $frg add 1 ge{$SDF{$SCF $SCA $SCP @ss}if
$llx $lly Tl $urx $llx sub $ury $lly sub scale $bkg 1 eq{FillColor
/separate_set_color dexec pop}if $wid $hei abs $bts 1 eq{$bkg 1 ge}{$bts 1 ge}
ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load $bts 1 eq
{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}repeat}
ifelse}bd/output_color_image_level1{@np $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min string def $msimage
false eq $ncl 1 eq or{/@cc load false $ncl ColorImage}{$wid $bts mul 8 div
ceiling cvi $ncl 3 eq{dup dup/$dat1 exch string def/$dat2 exch string def
/$dat3 exch string def/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch
string def/$dat2 exch string def/$dat3 exch string def/$dat4 exch string def
/@cc1 load/@cc2 load/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse
$SDF{$dsf $dsa $dsp @ss}if}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2
{currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring
pop}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def
/ImageCompression/None def/MaskedImage false def/DevicenImage false def
/output_color_image{@np $ncl 1 eq{DocGrayScaleSpace}{$ncl 3 eq{DocRgbSpace}
{DocCmykSpace}ifelse}ifelse setcolorspace/$dat $wid $bts mul $ncl mul 8 div
ceiling cvi 65535 min string def $ngx $llx $lly Tl $urx $llx sub $ury $lly sub
scale 8 dict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def currentdict
end image $SDF{$dsf $dsa $dsp @ss}if}bd/simulate_devicen_image{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def/DataSource create_datasource def
/stripRows 65535 $wid $bts mul $ncl mul 8 div div floor cvi 1 max def 1
stripRows set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling
cvi 1 sub def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight
stripIndex mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi
def stripIndex maxStripIndex eq{1 $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs $llx $t_lly Tl $urx $llx sub $t_ury $t_lly sub scale 0 1 $ncl
1 sub{@gs/inkIndex exch def 0 1 stripOutBuffer length 1 sub{dup $ncl mul
inkIndex add stripBuffer exch get stripOutBuffer 3 1 roll put}for[/Separation
colorantNames inkIndex get altColorSpace{$ncl 1 sub{0}repeat $ncl inkIndex roll
tintProc}]setcolorspace inkIndex 0 gt{true setoverprint}if strip_img_dict image
@gr}for @gr}for $SDF{$dsf $dsa $dsp @ss}if}bd/output_devicen_image_alt{@np $ngx
/colorantNames ImageDevicenSpace 1 get def/altColorSpace ImageDevicenSpace 2
get def/tintProc ImageDevicenSpace 3 get def altColorSpace DocCmykSpace eq{
/numAltChannels 4 def}{altColorSpace DocRgbSpace eq{/numAltChannels 3 def}{
/numAltChannels 1 def}ifelse}ifelse/DataSource create_datasource def
altColorSpace setcolorspace/stripRows 65535 $wid $bts mul $ncl numAltChannels
max mul 8 div div floor cvi 1 max def numAltChannels stripRows
set_image_strip_parameters/maxStripIndex $hei stripRows div ceiling cvi 1 sub
def 0 1 maxStripIndex{/stripIndex exch def/$t_ury $ury stripHeight stripIndex
mul add ceiling cvi def/$t_lly $t_ury stripHeight add ceiling cvi def
stripIndex maxStripIndex eq{numAltChannels $hei maxStripIndex stripRows mul sub
set_image_strip_parameters/$t_lly $t_ury stripHeight add ceiling cvi def}if
readstrip pop @gs 0 1 stripBuffer length $ncl div cvi 1 sub{/pixelIndex xd
stripBuffer pixelIndex $ncl mul $ncl getinterval{255 div}forall tintProc exec
numAltChannels array astore/pixelAltIndex pixelIndex numAltChannels mul def
/posColorant 0 def{stripOutBuffer pixelAltIndex posColorant add 3 -1 roll 255
mul cvi put/posColorant posColorant 1 add def}forall}for $llx $t_lly Tl $urx
$llx sub $t_ury $t_lly sub scale strip_img_dict image @gr}for $SDF{$dsf $dsa
$dsp @ss}if}bd/output_devicen_image_native{@np $ngx ImageDevicenSpace
setcolorspace/scanline $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def/readscanline{currentfile scanline readhexstring pop}bind def $llx
$lly Tl $urx $llx sub $ury $lly sub scale 8 dict begin/ImageType 1 def/Width
$wid def/Height $hei abs def/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]
def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource{
readscanline}def currentdict end image $SDF{$dsf $dsa $dsp @ss}if}bd
/output_devicen_image{Level3{output_devicen_image_native}{get_simulate_devicen
{simulate_devicen_image}{output_devicen_image_alt}ifelse}ifelse}bd
/output_masked_image{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi 65535 min
string def $ngx DevicenImage{ImageDevicenSpace}{$ncl 1 eq{DocGrayScaleSpace}{
$ncl 3 eq{DocRgbSpace}{DocCmykSpace}ifelse}ifelse}ifelse setcolorspace $llx
$lly Tl $urx $llx sub $ury $lly sub scale/ImageDataDict 8 dict def
ImageDataDict begin/ImageType 1 def/Width $wid def/Height $hei abs def
/BitsPerComponent $bts def/Decode[$ncl{0 1}repeat]def/ImageMatrix[$wid 0 0 $hei
neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource create_datasource def end
/MaskedImageDict 7 dict def MaskedImageDict begin/ImageType 3 def
/InterleaveType 3 def/MaskDict ImageMaskDict def/DataDict ImageDataDict def end
MaskedImageDict image $SDF{$dsf $dsa $dsp @ss}if}bd/set_image_mask{/$mbts xd
/$mhei xd/$mwid xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def
/Width $mwid def/Height $mhei abs def/BitsPerComponent $mbts def/DataSource
maskstream def/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]
def/Decode[1 0]def end}bd/@daq{dup type/arraytype eq{aload pop}if}bd
/skip_image_body{8 rp/$ury xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd
/$wid xd DevicenImage not ImageCompression/JPEG eq or ImageCompression/RLE eq
or ImageCompression/LZW eq or{create_datasource flushfile}{/scanline $wid $bts
mul $ncl mul 8 div ceiling cvi dup 65535 gt{pop $bts $ncl mul}if string def
/upperBound $wid $hei mul $bts mul $ncl mul scanline length div cvi 1 sub def 0
1 upperBound{pop currentfile scanline readhexstring pop pop}for}ifelse}bd
/disable_raster_output{deflevel 0 eq{@rs}if/output_image load
/output_image_original exch def/output_image/skip_image_body load def
globaldict begin/bSkipDeviceNImage true def end deflevel 0 eq{@sv}if}def
/enable_raster_output{deflevel 0 eq{@rs}if/bSkipDeviceNImage where{
/bSkipDeviceNImage undef/output_image/output_image_original load def}if
deflevel 0 eq{@sv}if}def
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel22Dict begin
@BeginSysCorelDict
/$dcm matrix currentmatrix def
@ssa
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%%ViewingOrientation: 1 0 0 1
%%BoundingBox: 0 0 2499 2499
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
-0.16016 -0.16016 2499.83972 2499.83972 @E
/$fm 0 def
-0.16016 2499.83972 m
2499.83972 2499.83972 L
2499.83972 -0.16016 L
-0.16016 -0.16016 L
-0.16016 2499.83972 L
@c
N

@rax %Note: Object
993.89509 1003.92888 1503.81383 1376.36702 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
1248.85446 1003.92888 m
1248.85417 1003.92888 l
1242.38381 1003.92888 1236.34205 1005.85843 1231.27597 1009.16901 c
1205.26328 1026.16866 1187.87272 1023.64951 1155.51468 1025.59068 c
1103.80507 1028.69291 1068.45874 1024.25839 1017.37786 1019.58236 c
1004.51650 1018.40513 993.89509 1030.14992 993.89509 1043.06343 c
993.89509 1107.46205 L
993.89509 1130.60750 L
993.89509 1158.27817 L
993.89509 1202.08479 L
993.89509 1221.53528 L
993.89509 1316.15802 L
993.89509 1352.88595 L
993.89509 1365.79946 1004.46208 1376.36702 1017.37786 1376.36702 c
1034.20091 1376.36702 L
1051.02142 1376.36702 L
1138.45946 1376.36702 L
1225.89751 1376.36702 L
1238.16699 1376.36702 L
1244.47323 1376.36702 L
1248.85446 1376.36702 L
1253.23569 1376.36702 L
1259.54192 1376.36702 L
1271.81140 1376.36702 L
1359.24945 1376.36702 L
1446.68750 1376.36702 L
1463.50800 1376.36702 L
1480.33106 1376.36702 l
1493.24683 1376.36702 1503.81383 1365.79946 1503.81383 1352.88595 C
1503.81383 1316.15802 L
1503.81383 1221.53528 L
1503.81383 1202.08479 L
1503.81383 1158.27817 L
1503.81383 1130.60750 L
1503.81383 1107.46205 L
1503.81383 1043.06343 l
1503.81383 1030.14992 1493.19241 1018.40513 1480.33106 1019.58236 c
1429.25017 1024.25839 1393.90384 1028.69291 1342.19424 1025.59068 c
1309.83619 1023.64951 1292.44564 1026.16866 1266.43294 1009.16901 c
1261.36687 1005.85843 1255.32510 1003.92888 1248.85474 1003.92888 c
1248.85446 1003.92888 L
@c
F

@rax %Note: Object
1248.85446 1042.36526 1495.05250 1367.60570 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
1248.85446 1367.60570 m
1491.54293 1367.60570 l
1493.47587 1367.60570 1495.05250 1366.00866 1495.05250 1364.05020 c
1495.05250 1061.97902 L
1495.05250 1043.90844 1480.67263 1049.37732 1461.57307 1051.45795 c
1413.35008 1056.71112 1350.31266 1060.33181 1302.00973 1053.15732 c
1284.09647 1050.49672 1267.45087 1041.08769 1248.85446 1042.51096 C
1248.85446 1367.60570 L
@c
F

@rax %Note: Object
238.58872 1807.78620 748.50633 2140.01773 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
383.15282 1807.78677 m
314.81348 1807.78677 L
295.71477 1807.78677 L
278.89427 1807.78677 L
262.07121 1807.78677 l
249.15572 1807.78677 238.58872 1818.35433 238.58872 1831.26784 c
238.58872 1895.66617 L
238.58872 1918.81191 L
238.58872 1946.48258 L
238.58872 1990.28920 L
238.58872 2009.73969 L
238.58872 2104.36243 L
238.58872 2116.53666 L
238.58872 2129.45017 249.15572 2140.01773 262.07121 2140.01773 c
278.89427 2140.01773 L
295.71477 2140.01773 L
383.15282 2140.01773 L
470.59115 2140.01773 L
482.86035 2140.01773 L
489.16658 2140.01773 L
499.68340 2140.01773 L
504.23471 2140.01773 L
551.19997 2140.01773 L
568.02302 2140.01773 L
584.84353 2140.01773 L
672.28157 2140.01773 L
725.02384 2140.01773 L
737.93934 2140.01773 748.50633 2129.45017 748.50633 2116.53666 C
748.50633 2104.36243 L
748.50633 2009.73969 L
748.50633 1952.08611 L
748.50633 1895.66617 L
748.50633 1831.26784 l
748.50633 1818.35433 737.93934 1807.78677 725.02384 1807.78677 C
672.28157 1807.78677 L
603.94224 1807.78677 L
603.94224 1807.78620 L
383.15282 1807.78620 L
383.15282 1807.78677 L
@c
F

@rax %Note: Object
266.25912 1837.58060 493.54753 2192.22425 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
266.25912 2159.99802 m
266.25912 2158.88457 L
266.25912 1841.14403 L
266.25912 1841.10265 l
266.25912 1839.86107 266.84844 1838.79411 267.89924 1838.13222 c
268.95033 1837.47118 270.16724 1837.40173 271.28693 1837.93890 c
304.16457 1853.71087 340.99994 1862.55354 379.90318 1862.55354 c
418.80614 1862.55354 455.64208 1853.71143 488.52000 1837.93890 c
489.63940 1837.40173 490.85660 1837.47118 491.90740 1838.13222 c
492.95820 1838.79411 493.54753 1839.86107 493.54753 1841.10265 c
493.54753 1841.14403 L
493.54753 2158.88457 L
493.54753 2159.99802 L
493.54753 2162.96277 l
493.54753 2164.32822 492.82271 2165.49921 491.59956 2166.10668 c
457.94863 2182.81946 420.02504 2192.22425 379.90318 2192.22425 c
339.78104 2192.22425 301.85802 2182.81890 268.20709 2166.10668 c
266.98394 2165.49921 266.25912 2164.32879 266.25912 2162.96277 c
266.25912 2159.99802 L
@c
F

@rax %Note: Object
261.87817 1833.21071 497.92847 2196.60520 @E
/$fm 1 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
270.64006 2159.99802 m
270.64006 1842.46299 L
287.25250 1850.32261 304.83978 1856.44857 323.16491 1860.60132 C
341.45121 1864.74529 360.44277 1866.93449 379.90318 1866.93449 C
399.36331 1866.93449 418.35543 1864.74529 436.64287 1860.60132 C
454.96743 1856.44857 472.55471 1850.32290 489.16658 1842.46299 C
489.16658 2162.43439 L
472.54280 2170.64324 454.85348 2177.04246 436.35883 2181.36699 C
418.24431 2185.60252 399.34431 2187.84359 379.90318 2187.84359 C
360.46233 2187.84359 341.56261 2185.60252 323.44894 2181.36699 C
304.95317 2177.04246 287.26356 2170.64324 270.64006 2162.43439 C
270.64006 2159.99802 L
@c
261.87817 2158.88457 m
261.87817 2162.96277 L
261.87817 2164.45550 262.29430 2165.87537 263.06107 2167.11241 C
263.82586 2168.34605 264.91946 2169.35291 266.27357 2170.02557 C
283.65137 2178.65594 302.14091 2185.37036 321.46413 2189.88879 C
340.24932 2194.28107 359.81461 2196.60520 379.90318 2196.60520 C
399.99203 2196.60520 419.55732 2194.28107 438.34365 2189.88879 C
457.66630 2185.37036 476.15528 2178.65594 493.53307 2170.02557 C
494.88775 2169.35291 495.98135 2168.34605 496.74557 2167.11241 C
497.51235 2165.87424 497.92847 2164.45606 497.92847 2162.96277 C
497.92847 1841.10265 L
497.92847 1839.74031 497.59058 1838.44885 496.95477 1837.29515 C
496.31924 1836.14542 495.40082 1835.17002 494.23465 1834.43584 C
493.07159 1833.70365 491.79288 1833.29717 490.47931 1833.22318 C
489.18529 1833.14920 487.87880 1833.40772 486.63751 1834.00271 C
470.26205 1841.85865 452.87660 1847.96617 434.72636 1852.07953 C
417.13228 1856.06674 398.78447 1858.17260 379.90318 1858.17260 C
361.02189 1858.17260 342.67436 1856.06674 325.08142 1852.07953 C
306.93061 1847.96617 289.54517 1841.85865 273.16913 1834.00271 C
271.92784 1833.40772 270.62192 1833.14920 269.32734 1833.22318 C
268.01433 1833.29717 266.73562 1833.70337 265.57200 1834.43584 C
264.40639 1835.17002 263.48740 1836.14542 262.85216 1837.29515 C
262.21606 1838.44885 261.87817 1839.74031 261.87817 1841.10265 C
261.87817 2158.88457 L
@c
F

@rax %Note: Object
493.54753 1837.58060 720.83594 2192.22425 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
720.83594 2159.99802 m
720.83594 2158.88457 L
720.83594 1841.14403 L
720.83594 1841.10265 l
720.83594 1839.86107 720.24661 1838.79411 719.19581 1838.13222 c
718.14472 1837.47118 716.92781 1837.40173 715.80813 1837.93890 c
682.93049 1853.71087 646.09512 1862.55354 607.19187 1862.55354 c
568.28891 1862.55354 531.45298 1853.71143 498.57534 1837.93890 c
497.45565 1837.40173 496.23846 1837.47118 495.18765 1838.13222 c
494.13685 1838.79411 493.54753 1839.86107 493.54753 1841.10265 c
493.54753 1841.14403 L
493.54753 2158.88457 L
493.54753 2159.99802 L
493.54753 2162.96277 l
493.54753 2164.32822 494.27235 2165.49921 495.49550 2166.10668 c
529.14643 2182.81946 567.07002 2192.22425 607.19187 2192.22425 c
647.31402 2192.22425 685.23704 2182.81890 718.88797 2166.10668 c
720.11112 2165.49921 720.83594 2164.32879 720.83594 2162.96277 c
720.83594 2159.99802 L
@c
F

@rax %Note: Object
489.16658 1833.21071 725.21688 2196.60520 @E
/$fm 1 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
716.45499 2159.99802 m
716.45499 1842.46299 L
699.84255 1850.32261 682.25528 1856.44857 663.93014 1860.60132 C
645.64384 1864.74529 626.65228 1866.93449 607.19187 1866.93449 C
587.73175 1866.93449 568.73962 1864.74529 550.45219 1860.60132 C
532.12762 1856.44857 514.54035 1850.32290 497.92847 1842.46299 C
497.92847 2162.43439 L
514.55225 2170.64324 532.24157 2177.04246 550.73622 2181.36699 C
568.85074 2185.60252 587.75074 2187.84359 607.19187 2187.84359 C
626.63272 2187.84359 645.53244 2185.60252 663.64611 2181.36699 C
682.14189 2177.04246 699.83178 2170.64324 716.45499 2162.43439 C
716.45499 2159.99802 L
@c
725.21688 2158.88457 m
725.21688 2162.96277 L
725.21688 2164.45550 724.80076 2165.87537 724.03398 2167.11241 C
723.26920 2168.34605 722.17559 2169.35291 720.82148 2170.02557 C
703.44369 2178.65594 684.95414 2185.37036 665.63093 2189.88879 C
646.84573 2194.28107 627.28044 2196.60520 607.19187 2196.60520 C
587.10302 2196.60520 567.53773 2194.28107 548.75169 2189.88879 C
529.42876 2185.37036 510.93978 2178.65594 493.56198 2170.02557 C
492.20731 2169.35291 491.11370 2168.34605 490.34948 2167.11241 C
489.58271 2165.87424 489.16658 2164.45606 489.16658 2162.96277 C
489.16658 1841.10265 L
489.16658 1839.74031 489.50447 1838.44885 490.14028 1837.29515 C
490.77581 1836.14542 491.69424 1835.17002 492.86041 1834.43584 C
494.02346 1833.70365 495.30217 1833.29717 496.61575 1833.22318 C
497.90976 1833.14920 499.21625 1833.40772 500.45754 1834.00271 C
516.83301 1841.85865 534.21846 1847.96617 552.36869 1852.07953 C
569.96277 1856.06674 588.31058 1858.17260 607.19187 1858.17260 C
626.07317 1858.17260 644.42069 1856.06674 662.01364 1852.07953 C
680.16444 1847.96617 697.54989 1841.85865 713.92592 1834.00271 C
715.16721 1833.40772 716.47313 1833.14920 717.76772 1833.22318 C
719.08072 1833.29717 720.35943 1833.70337 721.52306 1834.43584 C
722.68866 1835.17002 723.60765 1836.14542 724.24318 1837.29515 C
724.87899 1838.44885 725.21688 1839.74031 725.21688 1841.10265 C
725.21688 2158.88457 L
@c
F

@rax %Note: Object
993.89509 1799.03565 1503.81298 2155.82088 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
1138.45946 1799.03622 m
1070.11984 1799.03622 L
1051.02142 1799.03622 L
1034.20091 1799.03622 L
1017.37786 1799.03622 l
1004.46208 1799.03622 993.89509 1809.60378 993.89509 1822.51729 c
993.89509 1886.91562 L
993.89509 1910.06135 L
993.89509 1937.73203 L
993.89509 1981.53865 L
993.89509 2000.98913 L
993.89509 2095.61187 L
993.89509 2132.33981 L
993.89509 2145.25332 1004.46208 2155.82088 1017.37786 2155.82088 c
1034.20091 2155.82088 L
1051.02142 2155.82088 L
1138.45946 2155.82088 L
1225.89751 2155.82088 L
1238.16699 2155.82088 L
1244.47323 2155.82088 L
1254.99005 2155.82088 L
1259.54107 2155.82088 L
1306.50633 2155.82088 L
1323.32939 2155.82088 L
1340.14989 2155.82088 L
1427.58822 2155.82088 L
1480.33020 2155.82088 L
1493.24598 2155.82088 1503.81298 2145.25332 1503.81298 2132.33981 C
1503.81298 2095.61187 L
1503.81298 2000.98913 L
1503.81298 1943.33556 L
1503.81298 1886.91562 L
1503.81298 1822.51729 l
1503.81298 1809.60378 1493.24598 1799.03622 1480.33020 1799.03622 C
1427.58822 1799.03622 L
1359.24860 1799.03622 L
1359.24860 1799.03565 L
1138.45946 1799.03565 L
1138.45946 1799.03622 L
@c
F

@rax %Note: Object
993.89509 1824.83887 1503.81298 2155.82088 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
1503.81298 1828.34872 m
1503.81298 2152.31102 l
1503.81298 2154.24425 1502.23663 2155.82088 1500.30340 2155.82088 c
997.40466 2155.82088 l
995.47143 2155.82088 993.89509 2154.24425 993.89509 2152.31102 c
993.89509 1828.34872 l
993.89509 1826.41550 995.47143 1824.83887 997.40466 1824.83887 c
1500.30340 1824.83887 l
1502.23663 1824.83887 1503.81298 1826.41550 1503.81298 1828.34872 c
@c
F

@rax %Note: Object
1002.65641 1829.50129 1495.05165 2147.05956 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
1495.05165 1833.05679 m
1495.05165 2143.50406 l
1495.05165 2145.46252 1493.47502 2147.05956 1491.54208 2147.05956 c
1006.16598 2147.05956 l
1004.23304 2147.05956 1002.65641 2145.46252 1002.65641 2143.50406 c
1002.65641 1833.05679 l
1002.65641 1831.09833 1004.23304 1829.50129 1006.16598 1829.50129 c
1491.54208 1829.50129 l
1493.47502 1829.50129 1495.05165 1831.09833 1495.05165 1833.05679 c
@c
F

@rax %Note: Object
1244.47323 1824.83887 1253.23483 1882.54772 @E
/$fm 0 def
1244.47323 1882.54772 m
1253.23483 1882.54772 L
1253.23483 1824.83887 L
1244.47323 1824.83887 L
1244.47323 1882.54772 L
@c
N

@rax %Note: Object
1008.42406 1820.18154 1253.23483 2205.35546 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
1243.27020 2163.61984 m
1246.14794 2162.77540 1248.63732 2161.09701 1250.40926 2158.60252 C
1252.91452 2155.07565 1253.23483 2151.21345 1253.23483 2147.05956 C
1253.23483 1832.46038 L
1253.23483 1828.23307 1251.12501 1824.38561 1247.56044 1822.11307 C
1244.00580 1819.84734 1239.60331 1819.55707 1235.78220 1821.33808 C
1206.06520 1835.18504 1173.11443 1844.37638 1140.98230 1850.52614 C
1101.68929 1858.04617 1061.27490 1861.39389 1021.28882 1861.39389 C
1021.10060 1861.39389 1020.91209 1861.39332 1020.72387 1861.39276 C
1017.42945 1861.38567 1014.36180 1862.64907 1012.02917 1864.97546 C
1009.69625 1867.30271 1008.42406 1870.36838 1008.42406 1873.66365 C
1008.42406 2193.08372 L
1008.42406 2199.83953 1013.90598 2205.33647 1020.66180 2205.35461 C
1020.87071 2205.35518 1021.07991 2205.35546 1021.28882 2205.35546 C
1062.56976 2205.35546 1104.28441 2201.87254 1144.84167 2194.06734 C
1178.23748 2187.64063 1212.37342 2178.03260 1243.27020 2163.61984 C
@c
F

@rax %Note: Object
1017.18539 1828.93861 1244.47351 2196.59443 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
1017.18539 2151.24746 m
1017.18539 2150.13402 L
1017.18539 1891.62369 L
1017.18539 1873.66365 l
1017.18539 1872.69562 1017.53093 1871.86252 1018.21635 1871.17852 c
1018.90205 1870.49509 1019.73600 1870.15153 1020.70403 1870.15408 c
1020.89934 1870.15408 1021.09380 1870.15521 1021.28882 1870.15521 c
1107.81156 1870.15521 1185.60841 1854.38353 1239.48255 1829.27934 c
1240.60195 1828.75833 1241.81008 1828.83742 1242.85096 1829.50129 c
1243.89213 1830.16460 1244.47351 1831.22589 1244.47351 1832.46038 c
1244.47351 1891.62369 L
1244.47351 2147.05956 L
1244.47351 2150.71285 1244.37855 2154.49625 1240.29241 2155.33956 C
1186.38964 2180.66428 1108.24639 2196.59443 1021.28882 2196.59443 c
1021.08756 2196.59443 1020.88573 2196.59386 1020.68504 2196.59329 c
1018.75550 2196.58819 1017.18539 2195.01298 1017.18539 2193.08372 c
1017.18539 2154.21222 L
1017.18539 2151.24746 L
@c
F

@rax %Note: Object
1244.47351 1820.18154 1489.28457 2205.35546 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
1254.43843 2163.61984 m
1251.56069 2162.77540 1249.07131 2161.09701 1247.29909 2158.60252 C
1244.79383 2155.07565 1244.47351 2151.21345 1244.47351 2147.05956 C
1244.47351 1832.46038 L
1244.47351 1828.23307 1246.58362 1824.38561 1250.14819 1822.11307 C
1253.70255 1819.84734 1258.10532 1819.55707 1261.92643 1821.33808 C
1291.64343 1835.18504 1324.59392 1844.37638 1356.72633 1850.52614 C
1396.01934 1858.04617 1436.43373 1861.39389 1476.41981 1861.39389 C
1476.60803 1861.39389 1476.79625 1861.39332 1476.98476 1861.39276 C
1480.27918 1861.38567 1483.34683 1862.64907 1485.67918 1864.97546 C
1488.01238 1867.30271 1489.28457 1870.36838 1489.28457 1873.66365 C
1489.28457 2193.08372 L
1489.28457 2199.83953 1483.80265 2205.33647 1477.04683 2205.35461 C
1476.83792 2205.35518 1476.62872 2205.35546 1476.41981 2205.35546 C
1435.13858 2205.35546 1393.42394 2201.87254 1352.86696 2194.06734 C
1319.47115 2187.64063 1285.33493 2178.03260 1254.43843 2163.61984 C
@c
F

@rax %Note: Object
1253.23483 1828.93861 1480.52324 2196.59443 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
1480.52324 2151.24746 m
1480.52324 2150.13402 L
1480.52324 1891.62369 L
1480.52324 1873.66365 l
1480.52324 1872.69562 1480.17770 1871.86252 1479.49200 1871.17852 c
1478.80658 1870.49509 1477.97235 1870.15153 1477.00431 1870.15408 c
1476.80929 1870.15408 1476.61483 1870.15521 1476.41981 1870.15521 c
1389.89679 1870.15521 1312.10022 1854.38353 1258.22580 1829.27934 c
1257.10668 1828.75833 1255.89855 1828.83742 1254.85739 1829.50129 c
1253.81650 1830.16460 1253.23483 1831.22589 1253.23483 1832.46038 c
1253.23483 1891.62369 L
1253.23483 2147.05956 L
1253.23483 2150.71285 1253.33008 2154.49625 1257.41622 2155.33956 C
1311.31899 2180.66428 1389.46224 2196.59443 1476.41981 2196.59443 c
1476.62107 2196.59443 1476.82290 2196.59386 1477.02359 2196.59329 c
1478.95285 2196.58819 1480.52324 2195.01298 1480.52324 2193.08372 c
1480.52324 2154.21222 L
1480.52324 2151.24746 L
@c
F

@rax %Note: Object
1104.28980 299.35474 1393.41827 683.80980 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
1354.86765 299.35474 m
1336.29222 299.35474 L
1161.41584 299.35474 L
1144.59534 299.35474 L
1127.77257 299.35474 l
1114.85679 299.35474 1104.28980 309.92230 1104.28980 322.83581 c
1104.28980 438.05055 L
1104.28980 501.30765 L
1104.28980 660.32759 L
1104.28980 666.78917 1106.93083 672.66113 1111.18479 676.91537 C
1115.43817 681.16904 1121.31099 683.80980 1127.77257 683.80980 C
1329.02135 683.80980 L
1329.02135 675.04819 L
1258.29950 675.04819 L
1127.77257 675.04819 L
1123.72894 675.04819 1120.04844 673.39049 1117.37934 670.72082 C
1114.70910 668.05115 1113.05140 664.37121 1113.05140 660.32759 C
1113.05140 656.28425 1114.70910 652.60460 1117.37934 649.93436 C
1120.04901 647.26469 1123.72894 645.60699 1127.77257 645.60699 C
1127.77257 401.28888 L
1145.55345 420.00888 L
1163.33433 401.28888 L
1163.33433 645.60699 L
1336.29222 645.60699 L
1354.86765 645.60699 L
1369.93578 645.60699 l
1382.85128 645.60699 1393.41827 635.03943 1393.41827 622.12592 c
1393.41827 501.30765 L
1393.41827 443.65408 L
1393.41827 322.83581 l
1393.41827 309.92230 1382.85128 299.35474 1369.93578 299.35474 c
1354.86765 299.35474 L
@c
F

@rax %Note: Object
1245.71339 660.32759 1366.35222 683.80980 @E
/$fm 1 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
1342.86945 683.80980 m
1245.71339 683.80980 L
1245.71339 675.04819 L
1342.86945 675.04819 L
1346.91307 675.04819 1350.59357 673.39049 1353.26268 670.72082 C
1355.93263 668.05115 1357.59033 664.37121 1357.59033 660.32759 C
1366.35222 660.32759 L
1366.35222 666.78917 1363.71118 672.66113 1359.45694 676.91537 C
1355.20356 681.16904 1349.33102 683.80980 1342.86945 683.80980 C
@c
F

@rax %Note: Object
1357.59033 558.25682 1366.35222 660.32787 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
1357.59033 660.32787 m
1366.35222 660.32787 L
1366.35222 558.25682 L
1357.59033 558.25682 L
1357.59033 660.32787 L
@c
F

@rax %Note: Object
348.98315 299.35474 638.11191 683.81008 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
587.56309 683.81008 m
580.98557 683.81008 L
406.10948 683.81008 L
389.28898 683.81008 L
379.04315 683.81008 L
372.46592 683.81008 l
359.55014 683.81008 348.98315 673.24252 348.98315 660.32872 c
348.98315 545.11398 L
348.98315 481.85717 L
348.98315 401.25231 L
348.98315 337.55754 L
348.98315 322.83694 L
348.98315 317.27480 350.94047 312.14920 354.19918 308.11663 C
354.22413 308.08602 L
354.24879 308.05540 L
354.27373 308.02507 L
354.29839 307.99502 L
354.32334 307.96441 L
354.34828 307.93380 L
354.36076 307.91849 L
354.37294 307.90375 L
354.39846 307.87342 L
354.42312 307.84337 L
354.44863 307.81332 L
354.47386 307.78328 L
354.49880 307.75266 L
354.52403 307.72290 L
354.54161 307.70164 L
354.54954 307.69285 L
354.57477 307.66337 L
354.60057 307.63332 L
354.62608 307.60328 L
354.65131 307.57323 L
354.67739 307.54375 L
354.70261 307.51370 L
354.80183 307.40003 L
354.80551 307.39521 L
354.83159 307.36573 L
354.85795 307.33625 L
354.93591 307.24838 L
354.96198 307.21890 L
354.98835 307.18970 L
355.01414 307.16022 L
355.04050 307.13131 L
355.06687 307.10239 L
355.09323 307.07291 L
355.09946 307.06554 L
355.11959 307.04400 L
355.14595 307.01509 L
355.17231 306.98589 L
355.19924 306.95698 L
355.22561 306.92863 L
355.25225 306.89943 L
355.27890 306.87052 L
355.29080 306.85805 L
355.30583 306.84217 L
355.38605 306.75628 L
355.41298 306.72765 L
355.46740 306.67039 L
355.48384 306.65282 L
355.49433 306.64233 L
355.52126 306.61398 L
355.54847 306.58564 L
355.57597 306.55701 L
355.60290 306.52923 L
355.63039 306.50060 L
355.65789 306.47282 L
355.68000 306.44986 L
355.68510 306.44476 L
355.71260 306.41641 L
355.79537 306.33250 L
355.82287 306.30444 L
355.85036 306.27723 L
355.87814 306.24917 L
360.13181 301.99550 366.00435 299.35474 372.46592 299.35474 C
517.47307 299.35474 L
546.64866 299.35474 L
573.71499 299.35474 L
614.62913 299.35474 L
621.09071 299.35474 626.96324 301.99550 631.21691 306.24917 C
635.47087 310.50340 638.11191 316.37537 638.11191 322.83694 C
638.11191 373.87247 L
638.11191 424.90772 L
638.11191 631.32661 L
638.11191 637.78791 635.47087 643.65987 631.21691 647.91411 C
626.96324 652.16778 621.09071 654.80854 614.62913 654.80854 C
611.04557 654.80854 L
611.04557 660.32872 l
611.04557 673.24252 600.47858 683.81008 587.56309 683.81008 C
@c
629.35002 424.90772 m
629.35002 373.87247 L
629.35002 322.83694 L
629.35002 318.79332 627.69231 315.11339 625.02236 312.44372 C
622.35298 309.77433 618.67276 308.11663 614.62913 308.11663 C
573.71499 308.11663 L
546.64866 308.11663 L
517.47307 308.11663 L
502.99285 308.11663 L
372.46592 308.11663 L
368.42230 308.11663 364.74180 309.77433 362.07269 312.44372 C
359.40274 315.11339 357.74504 318.79332 357.74504 322.83694 C
357.74504 326.88028 359.40274 330.56022 362.07269 333.23017 C
364.74236 335.89984 368.42230 337.55754 372.46592 337.55754 C
575.90561 337.55754 L
580.98557 337.55754 L
587.56309 337.55754 L
600.47858 337.55754 611.04557 348.12510 611.04557 361.03890 c
611.04557 481.85717 L
611.04557 539.51046 L
611.04557 646.04693 L
614.62913 646.04693 L
618.67276 646.04693 622.35298 644.38894 625.02236 641.71956 C
627.69231 639.04989 629.35002 635.36995 629.35002 631.32661 C
629.35002 424.90772 L
@c
F

@rax %Note: Object
1765.74104 1101.91720 2054.86980 1486.37254 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
1893.87751 1101.91720 m
1822.86709 1101.91720 L
1806.04658 1101.91720 L
1789.22353 1101.91720 l
1776.30803 1101.91720 1765.74104 1112.48476 1765.74104 1125.39827 c
1765.74104 1240.61301 L
1765.74104 1303.87011 L
1765.74104 1462.89033 L
1765.74104 1469.35162 1768.38180 1475.22387 1772.63603 1479.47783 C
1776.88970 1483.73150 1782.76224 1486.37254 1789.22353 1486.37254 C
1907.16463 1486.37254 L
1990.47288 1486.37254 L
2004.32069 1486.37254 L
2010.78227 1486.37254 2016.65480 1483.73150 2020.90847 1479.47783 C
2025.16271 1475.22387 2027.80346 1469.35162 2027.80346 1462.89033 C
2027.80346 1448.16945 L
2031.38702 1448.16945 l
2044.30252 1448.16945 2054.86980 1437.60189 2054.86980 1424.68838 c
2054.86980 1408.39512 L
1933.78791 1408.39512 L
1923.18718 1408.39512 1913.07543 1404.18028 1905.58403 1396.68917 C
1898.09235 1389.19720 1893.87751 1379.08602 1893.87751 1368.48529 C
1893.87751 1101.91720 L
@c
2019.04157 1462.89033 m
2019.04157 1466.93395 2017.38387 1470.61361 2014.71392 1473.28356 C
2012.04482 1475.95294 2008.36431 1477.61065 2004.32069 1477.61065 C
1990.47288 1477.61065 L
1919.75074 1477.61065 L
1907.16463 1477.61065 L
1789.22353 1477.61065 L
1785.18019 1477.61065 1781.49969 1475.95294 1778.83030 1473.28356 C
1776.16063 1470.61361 1774.50293 1466.93395 1774.50293 1462.89033 C
1774.50293 1458.84671 1776.16063 1455.16677 1778.83030 1452.49710 C
1781.50025 1449.82715 1785.18019 1448.16945 1789.22353 1448.16945 C
1997.74346 1448.16945 L
2016.31890 1448.16945 L
2019.04157 1448.16945 L
2019.04157 1462.89033 L
@c
F

@rax %Note: Object
1910.30542 1007.51216 2199.43389 1391.96721 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
2160.88328 1007.51216 m
2142.30784 1007.51216 L
1967.43146 1007.51216 L
1950.61096 1007.51216 L
1933.78791 1007.51216 l
1920.87241 1007.51216 1910.30542 1018.07972 1910.30542 1030.99323 c
1910.30542 1146.20797 L
1910.30542 1209.46507 L
1910.30542 1368.48529 L
1910.30542 1374.94658 1912.94617 1380.81883 1917.20041 1385.07279 C
1921.45408 1389.32646 1927.32661 1391.96721 1933.78791 1391.96721 C
2051.72901 1391.96721 L
2135.03726 1391.96721 L
2148.88507 1391.96721 L
2155.34665 1391.96721 2161.21918 1389.32646 2165.47285 1385.07279 C
2169.72680 1380.81883 2172.36784 1374.94658 2172.36784 1368.48529 C
2172.36784 1353.76441 L
2175.95140 1353.76441 l
2188.86690 1353.76441 2199.43389 1343.19685 2199.43389 1330.28334 c
2199.43389 1209.46507 L
2199.43389 1151.81150 L
2199.43389 1030.99323 l
2199.43389 1018.07972 2188.86690 1007.51216 2175.95140 1007.51216 c
2160.88328 1007.51216 L
@c
2163.60595 1368.48529 m
2163.60595 1372.52863 2161.94825 1376.20857 2159.27830 1378.87852 C
2156.60891 1381.54762 2152.92869 1383.20561 2148.88507 1383.20561 C
2135.03726 1383.20561 L
2064.31512 1383.20561 L
2051.72901 1383.20561 L
1933.78791 1383.20561 L
1929.74457 1383.20561 1926.06406 1381.54762 1923.39468 1378.87852 C
1920.72501 1376.20857 1919.06702 1372.52863 1919.06702 1368.48529 C
1919.06702 1364.44167 1920.72501 1360.76173 1923.39468 1358.09206 C
1926.06463 1355.42211 1929.74457 1353.76441 1933.78791 1353.76441 C
2142.30784 1353.76441 L
2160.88328 1353.76441 L
2163.60595 1353.76441 L
2163.60595 1368.48529 L
@c
F

@rax %Note: Object
238.58872 1043.72901 748.50633 1400.51424 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
383.15282 1043.72957 m
314.81348 1043.72957 L
295.71477 1043.72957 L
278.89427 1043.72957 L
262.07121 1043.72957 l
249.15572 1043.72957 238.58872 1054.29713 238.58872 1067.21065 c
238.58872 1131.60898 L
238.58872 1154.75471 L
238.58872 1182.42539 L
238.58872 1226.23200 L
238.58872 1245.68249 L
238.58872 1340.30523 L
238.58872 1377.03317 L
238.58872 1389.94668 249.15572 1400.51424 262.07121 1400.51424 c
278.89427 1400.51424 L
295.71477 1400.51424 L
383.15282 1400.51424 L
470.59115 1400.51424 L
482.86035 1400.51424 L
489.16658 1400.51424 L
499.68340 1400.51424 L
504.23471 1400.51424 L
551.19997 1400.51424 L
568.02302 1400.51424 L
584.84353 1400.51424 L
672.28157 1400.51424 L
725.02384 1400.51424 L
737.93934 1400.51424 748.50633 1389.94668 748.50633 1377.03317 C
748.50633 1340.30523 L
748.50633 1245.68249 L
748.50633 1188.02891 L
748.50633 1131.60898 L
748.50633 1067.21065 l
748.50633 1054.29713 737.93934 1043.72957 725.02384 1043.72957 C
672.28157 1043.72957 L
603.94224 1043.72957 L
603.94224 1043.72901 L
383.15282 1043.72901 L
383.15282 1043.72957 L
@c
F

@rax %Note: Object
238.58872 1069.53222 748.50633 1400.51424 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
748.50633 1073.04208 m
748.50633 1397.00438 l
748.50633 1398.93761 746.92998 1400.51424 744.99676 1400.51424 c
242.09830 1400.51424 l
240.16507 1400.51424 238.58872 1398.93761 238.58872 1397.00438 c
238.58872 1073.04208 l
238.58872 1071.10885 240.16507 1069.53222 242.09830 1069.53222 c
744.99676 1069.53222 l
746.92998 1069.53222 748.50633 1071.10885 748.50633 1073.04208 c
@c
F

@rax %Note: Object
247.34976 1073.97269 739.74529 1391.75291 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
739.74529 1077.53074 m
739.74529 1388.19487 l
739.74529 1390.15474 738.16866 1391.75291 736.23543 1391.75291 c
250.85962 1391.75291 l
248.92639 1391.75291 247.34976 1390.15474 247.34976 1388.19487 c
247.34976 1077.53074 l
247.34976 1075.57087 248.92639 1073.97269 250.85962 1073.97269 c
736.23543 1073.97269 l
738.16866 1073.97269 739.74529 1075.57087 739.74529 1077.53074 c
@c
F

@rax %Note: Object
489.16658 1069.53222 497.92847 1127.24107 @E
/$fm 0 def
489.16658 1127.24107 m
497.92847 1127.24107 L
497.92847 1069.53222 L
489.16658 1069.53222 L
489.16658 1127.24107 L
@c
N

@rax %Note: Object
489.16715 1064.87490 733.97820 1450.04910 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
499.13206 1408.31320 m
496.25405 1407.46876 493.76494 1405.79036 491.99272 1403.29587 C
489.48746 1399.76901 489.16715 1395.90680 489.16715 1391.75291 C
489.16715 1077.15373 L
489.16715 1072.92643 491.27726 1069.07896 494.84154 1066.80643 C
498.39619 1064.54069 502.79868 1064.25043 506.61978 1066.03143 C
536.33679 1079.87839 569.28756 1089.06973 601.41969 1095.21950 C
640.71298 1102.73953 681.12737 1106.08724 721.11317 1106.08724 C
721.30167 1106.08724 721.48989 1106.08668 721.67811 1106.08611 C
724.97254 1106.07902 728.04019 1107.34243 730.37282 1109.66882 C
732.70573 1111.99606 733.97820 1115.06173 733.97820 1118.35701 C
733.97820 1437.77707 L
733.97820 1444.53288 728.49628 1450.02983 721.74019 1450.04797 C
721.53128 1450.04854 721.32236 1450.04910 721.11317 1450.04910 C
679.83222 1450.04910 638.11757 1446.56589 597.56031 1438.76069 C
564.16479 1432.33398 530.02857 1422.72624 499.13206 1408.31320 C
@c
F

@rax %Note: Object
497.92847 1073.63197 725.21688 1441.28778 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
725.21688 1395.94082 m
725.21688 1394.82737 L
725.21688 1136.31704 L
725.21688 1118.35701 l
725.21688 1117.38898 724.87106 1116.55587 724.18564 1115.87187 c
723.49994 1115.18844 722.66598 1114.84488 721.69795 1114.84743 c
721.50293 1114.84743 721.30819 1114.84857 721.11317 1114.84857 c
634.59043 1114.84857 556.79357 1099.07688 502.91943 1073.97269 c
501.80031 1073.45169 500.59219 1073.53077 499.55102 1074.19465 c
498.51014 1074.85795 497.92847 1075.91924 497.92847 1077.15373 c
497.92847 1136.31704 L
497.92847 1391.75291 L
497.92847 1395.40620 498.02372 1399.18961 502.10957 1400.03291 C
556.01235 1425.35764 634.15587 1441.28778 721.11317 1441.28778 c
721.31443 1441.28778 721.51625 1441.28721 721.71694 1441.28665 c
723.64649 1441.28154 725.21688 1439.70633 725.21688 1437.77707 c
725.21688 1398.90557 L
725.21688 1395.94082 L
@c
F

@rax %Note: Object
1749.20173 1807.78592 2259.11962 2140.01745 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
1893.76611 1807.78649 m
1825.42677 1807.78649 L
1806.32806 1807.78649 L
1789.50756 1807.78649 L
1772.68450 1807.78649 l
1759.76901 1807.78649 1749.20173 1818.35405 1749.20173 1831.26756 c
1749.20173 1895.66589 L
1749.20173 1918.81162 L
1749.20173 1946.48230 L
1749.20173 1990.28891 L
1749.20173 2009.73940 L
1749.20173 2104.36214 L
1749.20173 2116.53638 L
1749.20173 2129.44989 1759.76901 2140.01745 1772.68450 2140.01745 c
1789.50756 2140.01745 L
1806.32806 2140.01745 L
1893.76611 2140.01745 L
1981.20416 2140.01745 L
1993.47364 2140.01745 L
1999.77987 2140.01745 L
2010.29669 2140.01745 L
2014.84772 2140.01745 L
2061.81326 2140.01745 L
2078.63631 2140.01745 L
2095.45682 2140.01745 L
2182.89487 2140.01745 L
2235.63713 2140.01745 L
2248.55263 2140.01745 2259.11962 2129.44989 2259.11962 2116.53638 C
2259.11962 2104.36214 L
2259.11962 2009.73940 L
2259.11962 1952.08583 L
2259.11962 1895.66589 L
2259.11962 1831.26756 l
2259.11962 1818.35405 2248.55263 1807.78649 2235.63713 1807.78649 C
2182.89487 1807.78649 L
2114.55524 1807.78649 L
2114.55524 1807.78592 L
1893.76611 1807.78592 L
1893.76611 1807.78649 L
@c
F

@rax %Note: Object
2004.16082 1837.58031 2231.44923 2192.22397 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
2231.44923 2159.99773 m
2231.44923 2158.88428 L
2231.44923 1841.14375 L
2231.44923 1841.10236 l
2231.44923 1839.86079 2230.85991 1838.79383 2229.80882 1838.13194 c
2228.75802 1837.47061 2227.54110 1837.40145 2226.42142 1837.93861 c
2193.54378 1853.71058 2156.70813 1862.55326 2117.80517 1862.55326 c
2078.90220 1862.55326 2042.06627 1853.71115 2009.18835 1837.93861 c
2008.06866 1837.40145 2006.85175 1837.47061 2005.80094 1838.13194 c
2004.75014 1838.79383 2004.16082 1839.86079 2004.16082 1841.10236 c
2004.16082 1841.14375 L
2004.16082 2158.88428 L
2004.16082 2159.99773 L
2004.16082 2162.96249 l
2004.16082 2164.32794 2004.88564 2165.49893 2006.10879 2166.10639 c
2039.75972 2182.81918 2077.68302 2192.22397 2117.80517 2192.22397 c
2157.92731 2192.22397 2195.85033 2182.81861 2229.50098 2166.10639 c
2230.72413 2165.49893 2231.44923 2164.32850 2231.44923 2162.96249 c
2231.44923 2159.99773 L
@c
F

@rax %Note: Object
1999.77987 1833.21043 2235.82989 2196.60491 @E
/$fm 1 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
2227.06828 2159.99773 m
2227.06828 1842.46271 L
2210.45584 1850.32205 2192.86857 1856.44828 2174.54343 1860.60104 C
2156.25713 1864.74501 2137.26557 1866.93420 2117.80517 1866.93420 C
2098.34476 1866.93420 2079.35291 1864.74501 2061.06548 1860.60104 C
2042.74091 1856.44828 2025.15364 1850.32261 2008.54176 1842.46271 C
2008.54176 2162.43411 L
2025.16554 2170.64296 2042.85487 2177.04217 2061.34951 2181.36671 C
2079.46403 2185.60224 2098.36403 2187.84331 2117.80517 2187.84331 C
2137.24573 2187.84331 2156.14573 2185.60224 2174.25940 2181.36671 C
2192.75518 2177.04217 2210.44479 2170.64296 2227.06828 2162.43411 C
2227.06828 2159.99773 L
@c
2235.82989 2158.88428 m
2235.82989 2162.96249 L
2235.82989 2164.45521 2235.41405 2165.87509 2234.64728 2167.11213 C
2233.88249 2168.34548 2232.78860 2169.35263 2231.43449 2170.02501 C
2214.05698 2178.65565 2195.56715 2185.37008 2176.24394 2189.88850 C
2157.45902 2194.28079 2137.89373 2196.60491 2117.80517 2196.60491 C
2097.71631 2196.60491 2078.15102 2194.28079 2059.36469 2189.88850 C
2040.04205 2185.37008 2021.55307 2178.65565 2004.17528 2170.02501 C
2002.82060 2169.35263 2001.72671 2168.34548 2000.96249 2167.11213 C
2000.19572 2165.87395 1999.77987 2164.45578 1999.77987 2162.96249 C
1999.77987 1841.10236 L
1999.77987 1839.74003 2000.11776 1838.44857 2000.75357 1837.29487 C
2001.38910 1836.14513 2002.30724 1835.16973 2003.47370 1834.43556 C
2004.63676 1833.70337 2005.91518 1833.29688 2007.22904 1833.22290 C
2008.52306 1833.14891 2009.82954 1833.40743 2011.07083 1834.00243 C
2027.44630 1841.85836 2044.83175 1847.96589 2062.98198 1852.07924 C
2080.57606 1856.06646 2098.92387 1858.17231 2117.80517 1858.17231 C
2136.68646 1858.17231 2155.03398 1856.06646 2172.62693 1852.07924 C
2190.77745 1847.96589 2208.16318 1841.85836 2224.53921 1834.00243 C
2225.78022 1833.40743 2227.08643 1833.14891 2228.38072 1833.22290 C
2229.69402 1833.29688 2230.97244 1833.70309 2232.13635 1834.43556 C
2233.30195 1835.16973 2234.22094 1836.14513 2234.85619 1837.29487 C
2235.49228 1838.44857 2235.82989 1839.74003 2235.82989 1841.10236 C
2235.82989 2158.88428 L
@c
F

@rax %Note: Object
1776.87241 1829.37061 2004.16082 2171.72381 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
1847.03216 1829.37061 m
1934.00107 1829.37061 L
1991.88992 1829.37061 l
1998.65849 1829.37061 2004.16082 1834.87294 2004.16082 1841.64151 c
2004.16082 2159.45291 l
2004.16082 2166.22176 1998.65849 2171.72381 1991.88992 2171.72381 c
1934.00107 2171.72381 L
1847.03216 2171.72381 L
1789.14331 2171.72381 l
1782.37446 2171.72381 1776.87241 2166.22176 1776.87241 2159.45291 c
1776.87241 1841.64151 l
1776.87241 1834.87294 1782.37446 1829.37061 1789.14331 1829.37061 c
1847.03216 1829.37061 L
@c
F

@rax %Note: Object
1785.63373 1842.46271 1999.77987 2162.96249 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
1785.63373 1845.97228 m
1785.63373 2159.45291 l
1785.63373 2161.38586 1787.21036 2162.96249 1789.14331 2162.96249 c
1999.77987 2162.96249 L
1999.77987 1842.46271 L
1789.14331 1842.46271 l
1787.21036 1842.46271 1785.63373 1844.03934 1785.63373 1845.97228 C
@c
F

@rax %Note: Object
1002.65641 1042.36526 1248.85446 1367.60570 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
1248.85446 1367.60570 m
1006.16598 1367.60570 l
1004.23304 1367.60570 1002.65641 1366.00866 1002.65641 1364.05020 c
1002.65641 1061.97902 L
1002.65641 1043.90844 1017.03628 1049.37732 1036.13584 1051.45795 c
1084.35883 1056.71112 1147.39625 1060.33181 1195.69918 1053.15732 c
1213.61244 1050.49672 1230.25805 1041.08769 1248.85446 1042.51096 C
1248.85446 1367.60570 L
@c
F

@rax %Note: Object
1244.47323 1045.38501 1253.23483 1103.09386 @E
/$fm 0 def
1244.47323 1103.09386 m
1253.23483 1103.09386 L
1253.23483 1045.38501 L
1244.47323 1045.38501 L
1244.47323 1103.09386 L
@c
N

@rax %Note: Object
1008.42406 1040.72769 1253.23483 1425.90161 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
1243.27020 1384.16598 m
1246.14794 1383.32154 1248.63732 1381.64315 1250.40926 1379.14866 C
1252.91452 1375.62180 1253.23483 1371.75959 1253.23483 1367.60570 C
1253.23483 1053.00652 L
1253.23483 1048.77921 1251.12501 1044.93175 1247.56044 1042.65921 C
1244.00580 1040.39348 1239.60331 1040.10321 1235.78220 1041.88422 C
1206.06520 1055.73118 1173.11443 1064.92252 1140.98230 1071.07228 C
1101.68929 1078.59231 1061.27490 1081.94003 1021.28882 1081.94003 C
1021.10060 1081.94003 1020.91209 1081.93946 1020.72387 1081.93890 C
1017.42945 1081.93181 1014.36180 1083.19521 1012.02917 1085.52161 C
1009.69625 1087.84885 1008.42406 1090.91452 1008.42406 1094.20980 C
1008.42406 1413.62986 L
1008.42406 1420.38567 1013.90598 1425.88261 1020.66180 1425.90076 C
1020.87071 1425.90132 1021.07991 1425.90161 1021.28882 1425.90161 C
1062.56976 1425.90161 1104.28441 1422.41868 1144.84167 1414.61348 C
1178.23748 1408.18677 1212.37342 1398.57874 1243.27020 1384.16598 C
@c
F

@rax %Note: Object
1017.18539 1049.48476 1244.47351 1417.14057 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
1017.18539 1371.79361 m
1017.18539 1370.68016 L
1017.18539 1112.16983 L
1017.18539 1094.20980 l
1017.18539 1093.24176 1017.53093 1092.40866 1018.21635 1091.72466 c
1018.90205 1091.04123 1019.73600 1090.69767 1020.70403 1090.70022 c
1020.89934 1090.70022 1021.09380 1090.70135 1021.28882 1090.70135 c
1107.81156 1090.70135 1185.60841 1074.92967 1239.48255 1049.82548 c
1240.60195 1049.30447 1241.81008 1049.38356 1242.85096 1050.04743 c
1243.89213 1050.71074 1244.47351 1051.77203 1244.47351 1053.00652 c
1244.47351 1112.16983 L
1244.47351 1367.60570 L
1244.47351 1371.25899 1244.37855 1375.04239 1240.29241 1375.88570 C
1186.38964 1401.21043 1108.24639 1417.14057 1021.28882 1417.14057 c
1021.08756 1417.14057 1020.88573 1417.14000 1020.68504 1417.13943 c
1018.75550 1417.13433 1017.18539 1415.55912 1017.18539 1413.62986 c
1017.18539 1374.75836 L
1017.18539 1371.79361 L
@c
F

@rax %Note: Object
1244.47351 1040.72769 1489.28457 1425.90161 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
1254.43843 1384.16598 m
1251.56069 1383.32154 1249.07131 1381.64315 1247.29909 1379.14866 C
1244.79383 1375.62180 1244.47351 1371.75959 1244.47351 1367.60570 C
1244.47351 1053.00652 L
1244.47351 1048.77921 1246.58362 1044.93175 1250.14819 1042.65921 C
1253.70255 1040.39348 1258.10532 1040.10321 1261.92643 1041.88422 C
1291.64343 1055.73118 1324.59392 1064.92252 1356.72633 1071.07228 C
1396.01934 1078.59231 1436.43373 1081.94003 1476.41981 1081.94003 C
1476.60803 1081.94003 1476.79625 1081.93946 1476.98476 1081.93890 C
1480.27918 1081.93181 1483.34683 1083.19521 1485.67918 1085.52161 C
1488.01238 1087.84885 1489.28457 1090.91452 1489.28457 1094.20980 C
1489.28457 1413.62986 L
1489.28457 1420.38567 1483.80265 1425.88261 1477.04683 1425.90076 C
1476.83792 1425.90132 1476.62872 1425.90161 1476.41981 1425.90161 C
1435.13858 1425.90161 1393.42394 1422.41868 1352.86696 1414.61348 C
1319.47115 1408.18677 1285.33493 1398.57874 1254.43843 1384.16598 C
@c
F

@rax %Note: Object
1253.23483 1049.48476 1480.52324 1417.14057 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
1480.52324 1371.79361 m
1480.52324 1370.68016 L
1480.52324 1112.16983 L
1480.52324 1094.20980 l
1480.52324 1093.24176 1480.17770 1092.40866 1479.49200 1091.72466 c
1478.80658 1091.04123 1477.97235 1090.69767 1477.00431 1090.70022 c
1476.80929 1090.70022 1476.61483 1090.70135 1476.41981 1090.70135 c
1389.89679 1090.70135 1312.10022 1074.92967 1258.22580 1049.82548 c
1257.10668 1049.30447 1255.89855 1049.38356 1254.85739 1050.04743 c
1253.81650 1050.71074 1253.23483 1051.77203 1253.23483 1053.00652 c
1253.23483 1112.16983 L
1253.23483 1367.60570 L
1253.23483 1371.25899 1253.33008 1375.04239 1257.41622 1375.88570 C
1311.31899 1401.21043 1389.46224 1417.14057 1476.41981 1417.14057 c
1476.62107 1417.14057 1476.82290 1417.14000 1477.02359 1417.13943 c
1478.95285 1417.13433 1480.52324 1415.55912 1480.52324 1413.62986 c
1480.52324 1374.75836 L
1480.52324 1371.79361 L
@c
F

@rax %Note: Object
1039.98614 1030.53685 1253.23512 1474.19603 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
1050.63137 1474.10787 m
1099.82948 1472.88047 1150.80775 1460.42957 1194.10413 1436.72910 c
1208.94633 1428.60416 1224.19276 1418.45102 1236.24312 1406.49279 c
1243.78413 1399.00961 1253.23512 1387.59335 1253.23512 1376.36702 c
1253.23512 1043.40728 L
1239.73172 1030.53685 L
1235.16397 1043.15839 l
1232.63603 1050.14268 1224.28346 1058.37449 1218.82507 1063.15512 c
1207.55452 1073.02592 1194.17953 1081.40202 1180.91254 1088.29134 c
1142.95578 1108.00120 1099.23449 1118.81792 1056.60539 1120.75143 c
1051.55178 1120.98047 1046.37175 1121.22992 1042.93899 1125.59074 c
1040.35748 1128.86986 1040.42806 1132.20312 1040.34161 1136.07383 c
1040.33962 1136.15773 L
1040.33934 1136.24135 l
1040.18995 1182.85682 1040.05899 1229.47257 1040.01109 1276.08860 c
1039.96687 1319.22312 1039.95014 1362.36813 1040.23814 1405.50180 c
1040.33424 1419.86665 1040.43997 1434.24765 1040.75688 1448.60939 c
1040.84872 1452.77943 1040.94680 1456.96620 1041.16195 1461.13172 c
1041.35953 1464.95849 1041.37739 1468.95732 1044.49776 1471.81266 c
1047.10224 1474.19603 L
1050.63137 1474.10787 L
@c
F

@rax %Note: Object
1048.75483 1046.14016 1244.47323 1465.34882 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
1050.41282 1465.34882 m
1048.10967 1463.24126 1048.77411 1238.36967 1049.10123 1136.26942 C
1049.23304 1130.36428 1048.73414 1129.87871 1057.00252 1129.50425 C
1159.29978 1124.86365 1233.76620 1072.76683 1243.40287 1046.14016 C
1244.47323 1047.16035 L
1244.47323 1376.36702 L
1244.47323 1401.01937 1163.62290 1462.52438 1050.41282 1465.34882 C
@c
F

@rax %Note: Object
1244.47323 1030.53685 1457.72220 1474.19603 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
1447.07698 1474.10787 m
1397.87887 1472.88047 1346.90060 1460.42957 1303.60422 1436.72910 c
1288.76202 1428.60416 1273.51559 1418.45102 1261.46523 1406.49279 c
1253.92422 1399.00961 1244.47323 1387.59335 1244.47323 1376.36702 c
1244.47323 1043.40728 L
1257.97663 1030.53685 L
1262.54438 1043.15839 l
1265.07231 1050.14268 1273.42488 1058.37449 1278.88328 1063.15512 c
1290.15383 1073.02592 1303.52882 1081.40202 1316.79581 1088.29134 c
1354.75257 1108.00120 1398.47386 1118.81792 1441.10296 1120.75143 c
1446.15657 1120.98047 1451.33660 1121.22992 1454.76935 1125.59074 c
1457.35087 1128.86986 1457.28028 1132.20312 1457.36674 1136.07383 c
1457.36872 1136.15773 L
1457.36901 1136.24135 l
1457.51839 1182.85682 1457.64935 1229.47257 1457.69726 1276.08860 c
1457.74148 1319.22312 1457.75820 1362.36813 1457.47020 1405.50180 c
1457.37411 1419.86665 1457.26838 1434.24765 1456.95146 1448.60939 c
1456.85962 1452.77943 1456.76154 1456.96620 1456.54639 1461.13172 c
1456.34882 1464.95849 1456.33096 1468.95732 1453.21058 1471.81266 c
1450.60611 1474.19603 L
1447.07698 1474.10787 L
@c
F

@rax %Note: Object
1253.23512 1046.14016 1448.95351 1465.34882 @E
/$fm 0 def
 0 O 0 @g
1.0000 1.0000 1.0000  create_rgb_color set_solid_fill
1447.29553 1465.34882 m
1449.59868 1463.24126 1448.93424 1238.36967 1448.60712 1136.26942 C
1448.47531 1130.36428 1448.97420 1129.87871 1440.70583 1129.50425 C
1338.40857 1124.86365 1263.94214 1072.76683 1254.30548 1046.14016 C
1253.23512 1047.16035 L
1253.23512 1376.36702 L
1253.23512 1401.01937 1334.08545 1462.52438 1447.29553 1465.34882 C
@c
F

@rax %Note: Object
1747.23052 294.32438 2261.09112 527.57603 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
1983.80608 362.04605 m
1757.43581 439.40126 L
1757.43581 416.94378 L
1757.43581 414.64205 L
1973.08233 340.95033 L
1973.16283 340.92283 L
1984.92917 336.90189 L
2250.89178 492.17102 L
2250.89178 499.22334 L
2250.89178 505.18120 L
1987.16542 362.32724 L
1986.09647 361.74699 1984.95836 361.65345 1983.80608 362.04605 C
@c
1981.69030 462.06992 m
1983.64337 461.40265 L
1984.17146 461.71106 L
1983.34205 461.76463 1982.51291 461.88425 1981.69030 462.06992 C
@c
1757.43581 403.86359 m
1757.43581 402.96302 L
1757.43581 382.67490 L
1984.92917 304.93474 L
2250.89178 460.20501 L
2250.89178 475.25528 L
2250.89178 480.36161 L
1988.41805 327.12945 l
1986.85644 326.21811 1985.15367 326.04661 1983.44324 326.63169 C
1757.43581 403.86359 L
@c
2261.09112 488.89049 m
2261.09112 475.25528 L
2261.09112 457.80009 l
2261.09112 455.60324 2260.00828 453.71622 2258.11020 452.60901 C
1988.41805 295.16230 l
1986.85644 294.25096 1985.15367 294.08031 1983.44324 294.66482 c
1751.30504 373.99153 L
1748.82813 374.83852 1747.23647 377.06258 1747.23647 379.68066 c
1747.23647 402.96302 L
1747.23647 411.64724 L
1747.23647 418.12668 L
1747.23647 420.76120 L
1747.23647 445.68142 L
1747.22882 445.83364 1747.22882 445.98387 1747.23647 446.13298 C
1747.23647 448.07726 L
1747.82665 448.07726 L
1748.24929 448.77430 1748.88255 449.34293 1749.68079 449.70831 C
1779.73228 463.47959 L
1979.63972 395.16661 L
1984.58135 393.47802 1989.83820 394.00356 1994.34841 396.63666 C
2218.63606 527.57603 L
2257.95458 517.26841 L
2259.46885 516.87071 2260.58088 515.74224 2260.95449 514.26680 C
2261.09112 514.26680 L
2261.09112 499.22334 L
2261.09112 489.76724 L
2261.09112 488.89049 L
@c
F

@rax %Note: Object
1747.23052 405.95613 2261.09112 688.84016 @E
/$fm 0 def
 0 O 0 @g
0.2000 0.2000 0.2000  create_rgb_color set_solid_fill
1983.80636 473.67751 m
1757.43553 551.03329 L
1757.43553 528.57581 L
1757.43553 526.27323 L
1973.08261 452.58180 L
1973.16255 452.55458 L
1984.92888 448.53364 L
2250.89206 603.80334 L
2250.89206 610.85537 L
2250.89206 616.81351 L
1987.16542 473.95871 l
1986.09619 473.37931 1984.95836 473.28463 1983.80636 473.67751 C
@c
1757.43553 515.49534 m
1757.43553 514.59420 L
1757.43553 494.30636 L
1984.92888 416.56649 L
2250.89206 571.83647 L
2250.89206 586.88702 L
2250.89206 591.99364 L
1988.41833 438.76091 l
1986.85644 437.84957 1985.15367 437.67865 1983.44296 438.26343 c
1757.43553 515.49534 L
@c
2261.09112 600.52252 m
2261.09112 586.88702 L
2261.09112 569.43184 l
2261.09112 567.23471 2260.00800 565.34825 2258.11020 564.24047 c
1988.41833 406.79405 l
1986.85644 405.88271 1985.15367 405.71150 1983.44296 406.29657 c
1751.30504 485.62328 l
1748.82841 486.46998 1747.23647 488.69433 1747.23647 491.31213 c
1747.23647 514.59420 L
1747.23647 523.27899 L
1747.23647 529.75814 L
1747.23647 532.39266 L
1747.23647 557.31260 L
1747.22854 557.46510 1747.22854 557.61619 1747.23647 557.76501 C
1747.23647 559.70929 L
1747.82665 559.70929 L
1748.24957 560.40605 1748.88255 560.97468 1749.68079 561.34035 c
2027.05710 688.44926 l
2027.97496 688.86964 2028.89339 688.95043 2029.86992 688.69361 C
2257.95402 628.90016 l
2259.46885 628.50274 2260.58088 627.37398 2260.95420 625.89883 C
2261.09112 625.89883 L
2261.09112 610.85537 L
2261.09112 601.39871 L
2261.09112 600.52252 L
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel22Dict 22.0 0
%%EOF
